#! /usr/bin/perl
use lib qw( ./lib ../lib );
use Algorithm::Numerical::Shuffle qw( shuffle );
use FreeScore::Test qw( score_worldclass );
use Data::Dumper;

our $test  = new FreeScore::Test();

my $number = $test->worldclass( "judges" );
my $judges = $number->{ judges } - 1;
my $skill  = [ qw( good better best better best better ) ];

foreach my $athlete ( 0 .. 5 ) {
	foreach my $form ( 0 .. 1 ) {
		score( $skill->[ $athlete ], $judges );
		$test->worldclass( "form/next" );
	}
	$test->worldclass( "athlete/next" );

	$test->worldclass( "display" );
	sleep( 4 );
	$test->worldclass( "display" ) unless $athlete == 5;
}

# ============================================================
sub score {
# ============================================================
	my $skill  = shift;
	my $k      = shift;
	my @judges = shuffle( 0 .. $k );
	foreach my $judge (@judges) {
		my $score       = score_worldclass( $skill );
		my $judge_score = join( "/", $judge, (map { $_ * 10 } @{ $score }{ qw( major minor rhythm power ki ) }));
		$test->worldclass( $judge_score );
		sleep( 1 );
	}
	sleep( 2 );
}
