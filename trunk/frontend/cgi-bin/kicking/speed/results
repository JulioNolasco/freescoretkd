#! /usr/bin/perl
use Try::Tiny;
use CGI;
use CGI::Carp qw( fatalsToBrowser );
use File::Slurp qw( read_file );
use List::Util qw( reduce );
use List::MoreUtils qw( minmax );
use Data::Structure::Util qw( unbless );
use JSON::XS;
use Data::Dumper;

use lib qw( /usr/local/freescore/lib );
use FreeScore::Kicking::Speed;

my $cgi        = new CGI();
my $results    = undef;
my $tournament = read_tournament_config();
my $ring       = $cgi->param( 'ring' );
my $divid      = $cgi->param( 'divid' );
my $json       = new JSON::XS();

my @divisions  = ();
try {
    if( defined $ring ) {
        if( defined $divid ) {
            $results = new FreeScore::Kicking::Speed( $tournament->{ db }, $ring );
            push @divisions, grep { $_->{ name } eq $divid } @{ $results->{ divisions }};
        } else {
            $results = new FreeScore::Kicking::Speed( $tournament->{ db }, $ring );
            push @divisions, @{ $results->{ divisions }};
        }
    } else {
        $results = new FreeScore::Kicking::Speed( $tournament->{ db }, $ring );
        push @divisions, @{ $results->{ divisions }};
    }
} catch {
    die $_;
};

@divisions = sort { $a->{ name } cmp $b->{ name } } @divisions;

print $cgi->header();

my $branding_css = "/var/www/html/images/branding/branding.css";
$branding_css = -e $branding_css ? read_file( $branding_css ) : '';

print <<EOF;
<html>
    <head>
        <title>Speed Kicking Results</title>
        <link rel="stylesheet" href="/fonts/fontawesome/css/all.min.css"></link>
        <style type="text/css">
            body { font-family: Optima; margin: 0; }
            .division {
                clear: both;
                margin-top: 28px;
                width: 820px;
                height: 20px;
            }
            .division .description { float: left; }
            .division .round { float: right; }
            .results {
                padding: 0 50px 0 50px;
                page-break-inside: allow;
                page-break-after: always;
            }
            table { width: 920px; border-spacing: 0; }
            .results th {
                margin-top: 8px;
                border-top: 1px solid #999;
                border-bottom: 1px solid #999;
                padding: 0 4px 0 4px;
                text-align: center;
                background: #eee;
            }
            .results th.number,th.noc,th.athlete { text-align: left; }
            td { padding: 0; }
            .title                { text-align: center; padding: 5px 0; }
            .results table        { width: 820px; page-break-after: always; }
            .results td           { padding: 2px 4px 2px 4px; page-break-inside: avoid; }
            .results td.number    { width: 32px; }
            .results td.usat      { width: 80px; }
            .results td.noc       { width: 63px; }
            .results td.athlete   { width: 768px; }
            .results span.ignore  { text-decoration: line-through; }
            .results td.decisions { width: 32px; text-align: center; color: red }
            .results td.form,.score,.place { width: 200px; text-align: center; }
            .results td.tiebreaker { width: 40px; text-align: center; }
            .results td.preacc    { font-size: 8pt; }
            .results td.notes     { font-size: 9pt; }
            .results tr:nth-child( odd ) { background: #fff; }
            .results tr:nth-child( even ) { background: #eee; }
            .results tr:nth-child( odd ) td { border-bottom: 1px solid #fff; }
            .results tr:nth-child( even ) td { border-bottom: 1px solid #eee; }

            $branding_css
        </style>
    </head>
    <body>
<table>
<thead><tr><td><div class="header-space"> </div></td></tr></thead>
<tbody><tr><td>
EOF
foreach my $division (@divisions) {
    my $name   = uc $division->{ name };
    my $copy = unbless( clone ( $division ) );
    print "<script>var division = " . $json->canonical->encode( $copy ) . ";</script>\n";
    my $judges = $division->{ judges } || 3;
    my $placed = {};
    my $i = 0;
    foreach my $place (@{ $division->{ places }}) {
        foreach my $j (1 .. $place->{ medals }) {
            my $k = $division->{ placements }{ finals }[ $i ];
            $placed->{ $k } = $place->{ place };
            $i++;
        }
    }

    print <<EOF;
        <div class="results">
        <h1 class="title">Result Sheet</h1>
        <div class="division"><div class="description"><b>Division $name</b> &mdash; $division->{ description }</div><div class="round"><b>Finals Round</b></div></div>
        <table border=0 cellpadding=0 cellspacing=0><thead>
            <tr>
                <th class="number">Rank</th>
                <th class="noc">NOC</th>
                <th class="athlete">Name</th>
EOF
    foreach my $i ( 0 .. ($judges - 1)) { print $i == 0 ? "<th class=\"score\">R</th>" : "<th class=\"score\">J$i</th>"; }
    print <<EOF;
                <th class="score">Total</th>
            </tr></thead><tbody>
EOF
    my $n = $#{$division->{ athletes }};
    foreach my $i (0 .. $n) {
        my $j         = $division->{ placements }{ finals }[ $i ];
        my $athlete   = int( @{ $division->{ placements }{ finals }}) == 0 ? $division->{ athletes }[ $i ] : $division->{ athletes }[ $j ];
        my $decision  = $athlete->{ decision };
        my $consensus = $athlete->{ original }{ finals }{ technical }{ count };
        my $rank      = $i < 3 ? $i + 1 : 3;
        my $noc       = uc $athlete->{ info }{ noc };
        $noc = $noc =~ /\// ? (split /\//, $noc)[ -1 ] : $noc;
        my $penalties   = sum0 values %{$athlete->{ info }{ penalty }{ finals }};
        my $fontawesome = { bounds => 'fas fa-sign-out-alt', other => 'fas fa-exclamation-triangle', timelimit => 'fas fa-clock', restart => 'fas fa-redo', misconduct => 'fas fa-comment-slash' };
        my $icons       = join( ' ', map { sprintf( "<span class=\"%s\"></span>&nbsp;-%.1f<br>", $fontawesome->{ $_ }, $athlete->{ info }{ penalty }{ finals }{ $_ } ) } sort grep { $athlete->{ info }{ penalty }{ finals }{ $_ } > 0 } keys %{ $athlete->{ info }{ penalty }{ finals }} );
        my $adjustments = $penalties > 0 ? sprintf( '<br><span class="penalties">%s</span>', $icons ) : '';

        $rank = $decision eq 'disqualify' || $decision eq 'withdraw' ? '-' : $rank;
        print "<tr><td class=\"number\">$rank</td><td class=\"noc\">$noc</td><td class=\"athlete\">$athlete->{ name }</td>";
        foreach my $i ( 0 .. ($judges - 1)) {
            my $count  = $athlete->{ scores }{ finals }[ $i ]{ count };
            if( $count == 0             ) { print "<td class=\"score\">-</td>"; }
            elsif( $count >= $consensus ) { print "<td class=\"score\">&check;</td>"; }
            else                          { print "<td class=\"score\">&nbsp;</td>"; }
        }
        if   ( $decision eq 'disqualify' ) { print "<td class=\"score\">DSQ</td>"; }
        elsif( $decision eq 'withdraw'   ) { print "<td class=\"score\">WDR</td>"; }
        elsif( $consensus == 0           ) { print "<td class=\"score\">-</td>"; }
        else                               { sprintf( "<td class=\"score\">%s%s</td>", $consensus, $adjustments ); }
        print "</tr>\n";
    }
    print <<EOF;
        </tbody>
        </table>
        </div>
EOF
}

print <<EOF;
</td></tr></tbody>
<tfoot><tr><td><div class="footer-space"> </div></td></tr></tfoot>
</table>
<div class="header"><img src="/images/branding/header.png" width="100%"></div>
<div class="footer"><img src="/images/branding/footer.png" width="100%"></div>
    </body>
</html>
EOF

# ============================================================
sub ordinal {
# ============================================================
    my $n = shift;
    my $d = $n % 10;
    if( $n >= 11 && $n <= 13 ) { return $n . 'th'; }
    elsif( $d == 1 )           { return $n . 'st'; }
    elsif( $d == 2 )           { return $n . 'nd'; }
    elsif( $d == 3 )           { return $n . 'rd'; }
    else                       { return $n . 'th'; }
}

# ============================================================
sub read_tournament_config {
# ============================================================
    my $php = '';
    my $config = [
        '/home/ubuntu/freescore/trunk/frontend/html/include/php/config.php',
        '/var/www/html/freescore/include/php/config.php',
        '/var/www/html/include/php/config.php',
        '/var/www/freescore/include/php/config.php',
        '/var/www/include/php/config.php',
    ];
    foreach my $file (@$config) { next unless -e $file; $php = $file; last; }
    if( ! $php ) { die "Can't find configuration file 'config.php' $!"; }

    my $json = new JSON::XS();
    my $data = `echo \$(cat $php; echo '<?php echo( \$tournament ); ?>') | php`;
    my $config = $json->decode( $data );

    return $config;
}
