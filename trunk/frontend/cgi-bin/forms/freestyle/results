#! /usr/bin/perl
use Try::Tiny;
use CGI;
use CGI::Carp qw( fatalsToBrowser );
use JSON::XS;
use Data::Dumper;

use lib qw( /usr/local/freescore/lib );
use FreeScore::Forms::FreeStyle;

my $cgi        = new CGI();
my $results    = undef;
my $tournament = read_tournament_config();
my $ring       = $cgi->param( 'ring' );
my $divid      = $cgi->param( 'divid' );
my @rounds     = ($cgi->param( 'round' ));

my @divisions  = ();
my $results    = undef;
try {
	if( defined $ring ) {
		if( defined $divid ) { 
			$results = new FreeScore::Forms::FreeStyle( $tournament->{ db }, $ring );
			push @divisions, grep { $_->{ name } eq $divid } @{ $results->{ divisions }};

		} else {
			$results = new FreeScore::Forms::FreeStyle( $tournament->{ db }, $ring );
			push @divisions, @{ $results->{ divisions }};
		}
	} else {
		foreach my $ring ( @{$tournament->{ rings }} ) {
			$results = new FreeScore::Forms::FreeStyle( $tournament->{ db }, $ring );
			push @divisions, @{ $results->{ divisions }};
		}
	}
} catch {
	die $_;
	
};

@divisions = sort { $a->{ name } cmp $b->{ name } } @divisions;

print $cgi->header();

print <<EOF;
<html>
	<head>
		<title>Freestyle Forms Results</title>
		<style type="text/css">
			body {
				font-family: Optima;
			}
			.division {
				clear: both;
				margin-top: 28px;
				width: 900px;
				height: 20px;
			}
			.division .description {
				float: left;
			}
			.division .round {
				float: right;
			}
			.results {
				page-break-inside: avoid;
				page-break-after: always;
			}
			.results table {
				width: 900px;
			}
			.results th {
				margin-top: 8px;
				border-top: 1px solid #999;
				border-bottom: 1px solid #999;
				padding: 0 4px 0 4px;
				text-align: left;
			}
			.results .number     { width: 32px; }
			.results .noc        { width: 48px; }
			.results .athlete    { width: 408px; }
			.results .form       { width: 100px; text-align: center; }
			.results .tiebreaker { width: 48px; }

			.results td          { padding: 2px 4px 2px 4px; }
			.results td.score    { text-align: center; }
			.results td .tecpre  { font-size: 8pt; }
			.results tr:nth-child( even ) { background: #fff; }
			.results tr:nth-child( odd  ) { background: #eee; }
			.results tr:nth-child( even ) td { border-bottom: 1px solid #fff; }
			.results tr:nth-child( odd  ) td { border-bottom: 1px solid #eee; }
			.results .footer-img { position: absolute; bottom: 0; width: 920px;}

			.header, .header-space { height: 200px; }
			.footer, .footer-space {   height: 0px;   }
			.header { position: fixed; top: 0; }
			.footer { position: fixed;   bottom: 282; }
		</style>
	</head>
	<body>
<table>
<thead><tr><td><div class="header-space"> </div></td></tr></thead>
<tbody><tr><td>
EOF
foreach my $division (@divisions) {
	my $name   = uc $division->{ name };
	my $judges = $division->{ judges } || 3;
	@rounds = ( qw( finals semfin prelim )) unless @rounds;
	foreach my $round (@rounds) {
		next unless exists $division->{ order }{ $round };
		my $rname  = { prelim => 'Preliminary Round', semfin => 'Semi-Finals Round', finals => 'Finals Round' }->{ $round };
		my $i      = 0;

		print <<EOF;
		<div class="results">
		<div class="division"><div class="description"><b>Division $name</b> &mdash; $division->{ description } </div><div class="round"><b>$rname</b></div></div>
		<table border=0 cellpadding=0 cellspacing=0>
			<tr>
				<th class="number">#</th>
				<th class="noc">NOC</th>
				<th class="athlete">Name</th>
				<th class="form">Score</th>
				<th class="tiebreaker">TB1</th>
				<th class="tiebreaker">TB2</th>
			</tr>
EOF
		my $n = $#{$division->{ placements }{ $round }};
		my $ties = {};
		foreach my $i ( 0 .. $n ) {
			my $j       = $division->{ placements }{ $round }[ $i ];
			my $athlete = $division->{ athletes }[ $j ];
			foreach my $k ( $i + 1 .. $n ) {
				my $l       = $division->{ placements }{ $round }[ $k ];
				my $next    = $division->{ athletes }[ $l ];
				my $aa      = $athlete->{ adjusted }{ $round };
				my $ab      = $next->{ adjusted }{ $round };
				my $oa      = $athlete->{ original }{ $round };
				my $ob      = $next->{ original }{ $round };
				my $totala  = sprintf( "%.2f", $aa->{ total });
				my $totalb  = sprintf( "%.2f", $ab->{ total });
				my $techa   = sprintf( "%.2f", $aa->{ technical });
				my $techb   = sprintf( "%.2f", $ab->{ technical });
				my $origa   = sprintf( "%.1f", $oa->{ total });
				my $origb   = sprintf( "%.1f", $ob->{ total });

				if( $totala eq $totalb ) {
					$ties->{ $totala }{ $j } = {} if ! exists $ties->{ $totala }{ $j };
					$ties->{ $totala }{ $l } = {} if ! exists $ties->{ $totala }{ $l };

					$ties->{ $totala }{ $j }{ tb1 } = $techa;
					$ties->{ $totala }{ $l }{ tb1 } = $techb;

					if( $techa eq $techb ) {
						$ties->{ $totala }{ $j }{ tb2 } = $origa;
						$ties->{ $totala }{ $l }{ tb2 } = $origb;

						if( $origa eq $origb ) {
							$ties->{ $totala }{ $j }{ place } = $i;
							$ties->{ $totala }{ $l }{ place } = $i;
						}
					}
				}
			}
		}

		foreach my $i (0 .. $n) {
			my $j       = $division->{ placements }{ $round }[ $i ];
			my $athlete = $division->{ athletes }[ $j ];
			my $notes   = $athlete->{ notes } ? $athlete->{ notes } : '';
			my $noc     = uc( $athlete->{ info }{ noc });
			my $sum     = 0.0;
			my $score   = $athlete->{ adjusted }{ $round };
			my @score   = ();
			my $decided = 0;
			my $place   = sprintf( "%d.", $i + 1 );
			if( exists $score->{ decision } ) {
				my $codes = { disqualify => 'DQ', withdraw => 'WD' };
				foreach my $decision (sort keys %$codes) {
					if( $score->{ decision }{ $decision } ) {
						$decided = 1;
						$place   = '&ndash;';
						push @score, sprintf( "<td class=\"score\">%s<br><span class=\"tecpre\">%.2f/%.2f</span></td>", $codes->{ $decision }, $score->{ technical }, $score->{ presentation } );
						last;
					}
				}
			} else {
				push @score, sprintf( "<td class=\"score\">%.2f<br><span class=\"tecpre\">%.2f/%.2f</span></td>", $score->{ total }, $score->{ technical }, $score->{ presentation } ); 
			}
			my $key = sprintf( "%.2f", $score->{ total });
			if( exists $ties->{ $key } && ! $decided ) {
				$tb = $ties->{ $key }{ $j };
				if( exists $tb->{ tb1 }) { push @score, "<td class=\"tiebreaker\">$tb->{ tb1 }</td>"; }
				if( exists $tb->{ tb2 }) { push @score, "<td class=\"tiebreaker\">$tb->{ tb2 }</td>"; } else { push @score, '<td class="tiebreaker">&nbsp;</td>'; }
				if( exists $tb->{ place }) { $place = $tb->{ place }; }
			} else {
				push @score, '<td class="tiebreaker">&nbsp;</td>';
				push @score, '<td class="tiebreaker">&nbsp;</td>';
			}
			print "<tr><td class=\"number\">$place</td><td class=\"noc\">$noc</td><td class=\"athlete\">$athlete->{ name }</td>";
			print @score;
			print "</tr>\n";
		}
		print <<EOF;
		</table>
		</div>
EOF
	}
}

print <<EOF;
</td></tr></tbody>
<tfoot><tr><td><div class="footer-space"> </div></td></tr></tfoot>
</table>
<div class="header"><img src="/images/branding/header.png" width="100%"></div>
<div class="footer"><img src="/images/branding/footer.png" width="100%"></div>
	</body>
</html>
EOF

# ============================================================
sub ordinal {
# ============================================================
	my $n = shift;
	my $d = $n % 10;
	if( $n >= 11 && $n <= 13 ) { return $n . 'th'; }
	elsif( $d == 1 )           { return $n . 'st'; }
	elsif( $d == 2 )           { return $n . 'nd'; }
	elsif( $d == 3 )           { return $n . 'rd'; }
	else                       { return $n . 'th'; }
}

# ============================================================
sub read_tournament_config {
# ============================================================
	my $php = '';
	my $config = {
		redhat   => '/var/www/html/freescore/include/php/config.php',
		ubuntu   => '/var/www/freescore/include/php/config.php',
		raspbian => '/var/www/html/include/php/config.php',
		optscore => '/home/ubuntu/freescore/trunk/frontend/html/include/php/config.php',
	};
	foreach $os (keys %$config) { if( -e $config->{ $os } ) { $php = $config->{ $os }; last; } }
	if( ! $php ) { die "Can't find configuration file 'config.php' $!"; }

	my $json = new JSON::XS();
	my $data = `(cat $php; echo '<?php echo \$tournament ?>') | php`;
	my $config = $json->decode( $data );
	return $config;
}
