#! /usr/bin/perl
use Try::Tiny;
use CGI;
use JSON::XS;
use Data::Dumper;

use lib qw( /usr/local/freescore/lib );
use FreeScore::Forms::GrassRoots;

my $cgi        = new CGI();
my $results    = undef;
my $tournament = read_tournament_config();
my $ring       = $cgi->param( 'ring' );
my $divid      = $cgi->param( 'divid' );

my @divisions  = ();
try {
	if( defined $ring ) {
		if( defined $divid ) {
			$results = new FreeScore::Forms::GrassRoots( $tournament->{ db }, $ring );
			push @divisions, grep { $_->{ name } eq $divid } @{ $results->{ divisions }};
		} else {
			$results = new FreeScore::Forms::GrassRoots( $tournament->{ db }, $ring );
			push @divisions, @{ $results->{ divisions }};
		}
	} else {
		foreach my $ring ( @{$tournament->{ rings }} ) {
			$results = new FreeScore::Forms::GrassRoots( $tournament->{ db }, $ring );
			push @divisions, @{ $results->{ divisions }};
		}
		if( defined $divid ) {
			@divisions = grep { $_->{ name } eq $divid } @divisions;
		}
	}
} catch {
	die $_;
};

@divisions = sort { $a->{ name } cmp $b->{ name } } @divisions;

print $cgi->header();

print <<EOF;
<html>
	<head>
		<title>Results</title>
		<style type="text/css">
			body {
				font-family: Optima;
			}
			.division {
				clear: both;
				margin-top: 28px;
				width: 640px;
				height: 20px;
			}
			.division .description {
				float: left;
			}
			.division .ring {
				float: right;
			}

			.results {
				position: relative;
				font-family: HelveticaNeue;
				page-break-inside: avoid;
				page-break-after: always;
			}
			.results table {
				width: 640px;
			}
			.results th {
				margin-top: 8px;
				border-top: 1pt solid #ccc;
				border-bottom: 1pt solid #ccc;
				padding: 0 4px 0 4px;
				text-align: left;
			}
			.results th.number  { width: 20px; }
			.results th.athlete { width: 240px; }

			.results td { 
				padding: 2px 4px 2px 4px;
			}
			.results td .notes {
				font-size: 9pt;
			}
			.results tr:nth-child( even ) { background: #fff; }
			.results tr:nth-child( odd  ) { background: #eee; }

			.header, .header-space { height: 225px; }
			.footer, .footer-space { height: 50px; }
			.header { position: fixed; top: 0; }
			.footer { position: fixed; bottom: 0; }

		</style>
	</head>
	<body>
	<table>
	<thead><tr><td><div class="header-space"> </div></td></tr></thead>
	<tbody><tr><td>

EOF
foreach my $division (@divisions) {
	my $name   = uc $division->{ name };
	my $judges = $division->{ judges } || 3;
	my $placed = {};
	my $i = 0;
	foreach my $place (@{ $division->{ places }}) {
		foreach my $j (1 .. $place->{ medals }) {
			my $k = $division->{ placements }[ $i ];
			$placed->{ $k } = $place->{ place };
			$i++;
		}
	}

	print <<EOF;
		<div class="results">
		<div class="division"><b>Division $name</b> &mdash; $division->{ description }</div>
		<table border=0 cellpadding=0 cellspacing=0>
			<tr>
				<th class="number">Rank</th>
				<th class="number">NOC</th>
				<th class="athlete">Name</th>
EOF
	foreach my $i ( 1 .. $judges ) { print "<th>J$i</th>"; }
	print <<EOF;
				<th>Total</th>
			</tr>
EOF
	my $n = $#{$division->{ athletes }};
	foreach my $i (0 .. $n) {
		my $j       = $division->{ placements }[ $i ];
		my $athlete = $division->{ athletes }[ $j ];
		my $rank    = $i < 3 ? $i + 1 : 3;
		$rank = $athlete->{ info }{ decision } eq 'DSQ' ? '-' : $rank;
		print "<tr><td>$rank.</td><td>$athlete->{ info }{ noc }</td><td>$athlete->{ name }</td>";
		foreach my $i ( 0 .. ($judges - 1)) {
			my $score = sprintf( "%.1f", $athlete->{ scores }[ $i ] );
			$score = $score <= 0 ? '-' : $score;
			print "<td>$score</td>";
		}
		my $score = $athlete->{ info }{ decision } eq 'DSQ' ? 'DSQ' : sprintf( "%.1f", $athlete->{ score } );
		print "<td>$score</td>";
		print "</tr>\n";
	}
	print <<EOF;
		</table>
		</div>
EOF
}

print <<EOF;
	</td></tr></tbody>
	<tfoot><tr><td><div class="footer-space"> </div></td></tr></tfoot>
</table>
<div class="header"><img src="/images/branding/header.png" width="100%"></div>
<div class="footer"><img src="/images/branding/footer.png" width="100%"></div>
	</body>
</html>
EOF

# ============================================================
sub read_tournament_config {
# ============================================================
	my $php = '';
	my $config = [
    '/home/ubuntu/freescore/trunk/frontend/html/include/php/config.php',
		'/var/www/html/freescore/include/php/config.php',
		'/var/www/html/include/php/config.php',
		'/var/www/freescore/include/php/config.php',
		'/var/www/include/php/config.php',
	];
	foreach my $file (@$config) { next unless -e $file; $php = $file; last; }
	if( ! $php ) { die "Can't find configuration file 'config.php' $!"; }

	my $json = new JSON::XS();
	my $data = `echo \$(cat $php; echo '<?php echo( \$tournament ); ?>') | php`;
	my $config = $json->decode( $data );

	return $config;

}
