#! /usr/bin/perl
use Try::Tiny;
use CGI;
use Time::HiRes qw( usleep );
use JSON::XS;

use lib qw( /usr/local/freescore/lib );
use FreeScore::Forms::GrassRoots;

my $cgi        = new CGI();
my $tournament = shift || $cgi->param( 'tournament' );
my $ring       = shift || $cgi->param( 'ring' ) || $cgi->cookie( 'ring' );
my $json       = new JSON::XS();

$| = 1;
print "Content-Type: text/event-stream\n";
print "Cache-Control: no-cache\n\n";

my $eol      = "\r\n";
my $last     = undef;
my $checksum = undef;

UPDATE: while( 1 ) {
	my $data   = undef;
	my $id     = time();

	usleep( 250000 );

	try {
		$checksum = FreeScore::Forms::GrassRoots::checksum( $tournament, $ring );
		next UPDATE if( defined $checksum && $checksum eq $last );

		$data = new FreeScore::Forms::GrassRoots( $tournament, $ring );
	} catch {
		$data = { error => $_ };
	};
	my $update = $json->convert_blessed()->canonical()->encode( $data ); $update =~ s/"(\d+(?:\.\d+)?)"/$1/g;

	print "id: $id$eol";
	print "data: $update$eol$eol";
	$last = $checksum;
}
