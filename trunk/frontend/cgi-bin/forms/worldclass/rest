#! /usr/bin/perl

use lib qw( /Users/mikewong899/devel/freescore/backend/lib );
use Mojolicious::Lite;
use YAML;
use FreeScore::Forms::WorldClass;

srand();

# ============================================================
# JUDGE INTERFACE
# ============================================================

# ------------------------------------------------------------
# NEXT DIVISION
# ------------------------------------------------------------
get '/:tournament/:ring/division/next' => sub { 
	my $self       = shift;
	my $tournament = $self->param( 'tournament' );
	my $ring       = $self->param( 'ring' );
	my $progress   = new FreeScore::Forms::WorldClass( $tournament, $ring );
	my $division   = $progress->current();
	my $next;
	if      ( $division->{ round } =~ /pre/i ) {
		my $cut = int((int( @{$division->{ athletes }} )/2.0) + 0.5);
		$next   = $division->next_round( 'Semi-Finals', $cut );
		$next->write();
		splice( @{ $progress->{ divisions }}, $progress->{ current } + 1, 0, $next ); 

	} elsif ( $division->{ round } =~ /semi/i ) {
		$next   = $division->next_round( 'Finals', 8 );
		$next->write();
		splice( @{ $progress->{ divisions }}, $progress->{ current } + 1, 0, $next ); 

	} elsif ( $division->{ tiebreaker } ) {
		$next   = $division->next_round( 'Tiebreaker' );
		$next->write();
		splice( @{ $progress->{ divisions }}, $progress->{ current } + 1, 0, $next ); 
	}

	$progress->next();
	$progress->write();
	$self->render( json => { 'current' => $progress->current() } );
};

# ------------------------------------------------------------
# PREVIOUS DIVISION
# ------------------------------------------------------------
get '/:tournament/:ring/division/previous' => sub { 
	my $self       = shift;
	my $tournament = $self->param( 'tournament' );
	my $ring       = $self->param( 'ring' );
	my $progress = new FreeScore::Forms::WorldClass( $tournament, $ring );
	$progress->previous();
	$progress->write();
	$self->render( json => { 'current' => $progress->current() } );
};

# ------------------------------------------------------------
# TOGGLE CURRENT DIVISION STATE BETWEEN DISPLAY AND SCORE
# ------------------------------------------------------------
get '/:tournament/:ring/display' => sub { 
	my $self       = shift;
	my $tournament = $self->param( 'tournament' );
	my $ring       = $self->param( 'ring' );
	my $progress   = new FreeScore::Forms::WorldClass( $tournament, $ring );
	my $division   = $progress->current();

	if( $division->is_display() ) { $division->score();   } 
	else                          { $division->display(); }

	$division->write();
	$self->render( json => { 'state' => $division->{ state } } );
};

# ------------------------------------------------------------
# SCORE FOR NEXT ATHLETE
# ------------------------------------------------------------
get '/:tournament/:ring/athlete/next' => sub { 
	my $self       = shift;
	my $tournament = $self->param( 'tournament' );
	my $ring       = $self->param( 'ring' );
	my $progress   = new FreeScore::Forms::WorldClass( $tournament, $ring );
	my $division   = $progress->current();
	$division->next();
	$division->write();
	$self->render( json => { 'current' => $division->{ current }, 'state' => $division->{ state } } );
};

# ------------------------------------------------------------
# SCORE FOR PREVIOUS ATHLETE
# ------------------------------------------------------------
get '/:tournament/:ring/athlete/previous' => sub { 
	my $self       = shift;
	my $tournament = $self->param( 'tournament' );
	my $ring       = $self->param( 'ring' );
	my $progress   = new FreeScore::Forms::WorldClass( $tournament, $ring );
	my $division   = $progress->current();
	$division->previous();
	$division->write();
	$self->render( json => { 'current' => $division->{ current }, 'state' => $division->{ state } } );
};

# ------------------------------------------------------------
# WRITE JUDGE SCORE FOR ATHLETE
# ------------------------------------------------------------
get '/:tournament/:ring/:judge/:major/:minor/:rhythm/:power/:ki' => sub { 
	my $self         = shift;
	my $tournament   = $self->param( 'tournament' );
	my $ring         = $self->param( 'ring' );
	my $judge        = $self->param( 'judge'      );
	my $major        = get_score( $self, 'major'  );
	my $minor        = get_score( $self, 'minor'  );
	my $rhythm       = get_score( $self, 'rhythm' );
	my $power        = get_score( $self, 'power'  );
	my $ki           = get_score( $self, 'ki'     );
	my $progress     = new FreeScore::Forms::WorldClass( $tournament, $ring );
	my $division     = $progress->current();
	my $athlete      = $division->{ current };
	my $score        = { major => $major, minor => $minor, rhythm => $rhythm, power => $power, ki => $ki };
	$division->record_score( $judge, $score );
	$division->write();
	$self->render( json => { athlete => $athlete, judge => ($judge + 1), score => $score } );
};

any '*' => sub {
	my $self = shift;
	$self->render( text => 'Forms::WorldClass: Unknown command' );
};


app->start( 'cgi' );

# ============================================================
sub get_score {
# ============================================================
	my $ajax  = shift;
	my $name  = shift;

	my $score = $ajax->param( $name );
	if( not defined $score || $score eq '' ) { $score = -1.0; }
	else                                     { $score /= 10;  }
	return sprintf( "%.1f", $score );
}
