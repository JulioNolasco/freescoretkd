#! /usr/bin/perl
use Try::Tiny;
use CGI;
use CGI::Carp qw( fatalsToBrowser );
use JSON::XS;
use Data::Dumper;

use lib qw( /usr/local/freescore/lib );
use FreeScore::Forms::WorldClass;

my $cgi        = new CGI();
my $results    = undef;
my $tournament = read_tournament_config();

my @divisions  = ();
try {
	foreach my $ring ( 1 .. $tournament->{ rings }{ count } ) {
		$results = new FreeScore::Forms::WorldClass( $tournament->{ db }, $ring );
		push @divisions, @{ $results->{ divisions }};
	}
} catch {
	
};

@divisions = sort { $a->{ name } cmp $b->{ name } } @divisions;

print $cgi->header();

print <<EOF;
<html>
	<head>
		<title>Tournament World Class Forms Results</title>
		<style type="text/css">
			body {
				font-family: HelveticaNeue-CondensedBold;
			}
			.division {
				margin-top: 20px;
			}
			.results {
				position: relative;
				font-family: HelveticaNeue;
				page-break-inside: avoid;
			}
			.results table {
				width: 640px;
			}
			.results th {
				margin-top: 8px;
				border-top: 1pt solid #ccc;
				border-bottom: 1pt solid #ccc;
				padding: 0 4px 0 4px;
				text-align: left;
			}
			.results th.number  { width: 20px; }
			.results th.athlete { width: 200px; }

			.results td { 
				padding: 2px 4px 2px 4px;
			}
			.results td .notes {
				font-size: 9pt;
			}
			.results tr:nth-child( even ) { background: #fff; }
			.results tr:nth-child( odd  ) { background: #eee; }

		</style>
	</head>
	<body>
		<h1>$tournament->{ name }</h1>
		<h2>World Class Forms Results</h2>
EOF
foreach my $division (@divisions) {
	my $name   = uc $division->{ name };
	my $judges = $division->{ judges } || 3;
	my $round  = $division->{ round };
	my $forms  = int( @{$division->{ forms }{ $round }} );
	my $placed = {};
	my $i = 0;
	foreach my $place ( 1 .. 3 ) {
		my $i = $division->{ placement }{ $round }[ ($place - 1) ];
		$placed->{ $i } = ordinal( $place );
	}

	print <<EOF;
		<div class="results">
		<div class="division"><b>Division $name</b> &mdash; $division->{ description }</div>
		<table border=0 cellpadding=0 cellspacing=0>
			<tr>
				<th class="number">#</th>
				<th class="athlete">Name</th>
EOF
	foreach my $i ( 1 .. $forms ) { print "<th>F$i</th>"; }
	print <<EOF;
				<th>Total</th>
				<th>Place</th>
			</tr>
EOF
	my $n = $#{$division->{ athletes }};
	foreach my $i (0 .. $n) {
		my $athlete = $division->{ athletes }[ $i ];
		my $notes   = $athlete->{ notes } ? $athlete->{ notes } : '';
		print "<tr><td>" . ($i + 1) . ".</td><td>$athlete->{ name }</td>";
		my $forms = $athlete->{ scores }{ $round };
		my $sum   = 0.0;
		foreach my $j ( 0 .. $#$forms ) {
			my $form = $forms->[ $j ];
			my $score = $form->{ complete_mean };
			printf( "<td>%.1f/%.1f</td>", $score->{ accuracy }, $score->{ presentation } );
			$sum += $score->{ total };
		}
		printf( "<td>%.2f<span class=\"notes\">$notes</span></td>", $sum, $notes );
		if( exists $placed->{ $i } ) { print "<td>$placed->{ $i }</td>"; }
		else { print "<td>-</td>"; }
		print "</tr>\n";
	}
	print <<EOF;
		</table>
		</div>
EOF
}

print <<EOF;
	</body>
</html>
EOF

# ============================================================
sub ordinal {
# ============================================================
	my $n = shift;
	my $d = $n % 10;
	if( $n >= 11 && $n <= 13 ) { return $n . 'th'; }
	elsif( $d == 1 )           { return $n . 'st'; }
	elsif( $d == 2 )           { return $n . 'nd'; }
	elsif( $d == 3 )           { return $n . 'rd'; }
	else                       { return $n . 'th'; }
}

# ============================================================
sub read_tournament_config {
# ============================================================
	my $php = `cat /var/www/html/freescore/include/php/config.php`;
	$php .= "<?php echo \$tournament ?>";
	$php =~ s/\n/ /g;

	my $json = new JSON::XS();
	my $data = `echo '$php' | php`;
	return $json->decode( $data );
}
